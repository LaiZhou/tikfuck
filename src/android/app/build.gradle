def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.gms.google-services'  // Google Services plugin

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    project.logger.info('Load maps properties from local file')
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
} else {
    project.logger.info('Load maps properties from environment')
    try{
        keystoreProperties.setProperty('storePassword', System.getenv('KEYSTORE_PASSWORD'));
        keystoreProperties.setProperty('keyPassword', System.getenv('KEY_PASSWORD'));
        keystoreProperties.setProperty('keyAlias', System.getenv('KEY_ALIAS'));
        keystoreProperties.setProperty('storeFile', System.getenv('KEY_PATH'));
    }
    catch(NullPointerException e){
        project.logger.warn('Failed to load key.properties from environment.', e)
    }
}

android {
    compileSdkVersion 30

    sourceSets {
        main.java.srcDirs += 'src/main/java'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.telsa.dtok"
        minSdkVersion 21
        targetSdkVersion 30
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
 
    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    // Import the Firebase BoM
    //implementation platform('com.google.firebase:firebase-bom:28.4.0')
    // Declare the dependency for the Firebase SDK for Google Analytics
    //implementation 'com.google.firebase:firebase_core'
    //implementation 'com.google.firebase:firebase-common'
    //implementation 'com.google.firebase:firebase-analytics'
    // Declare the dependencies for any other desired Firebase products
    // For example, declare the dependencies for Firebase Authentication and Cloud Firestore
    //implementation 'com.google.firebase:firebase-auth'
    //implementation 'com.google.firebase:firebase-firestore'
    //implementation 'androidx.annotation:annotation:1.1.0'
    //implementation 'com.android.support:multidex:1.0.3'
}

rootProject.ext {
    set('FlutterFire', [
            FirebaseSDKVersion: '28.4.0'
    ])
}
